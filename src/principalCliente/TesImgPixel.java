/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principalCliente;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author wilmer
 */
public class TesImgPixel extends javax.swing.JFrame {

    private BufferedImage bimg;
    private boolean f = false;

    private int r;
    private int b;
    private int gs;
    private Color color;

    /**
     * Creates new form TesImgPixel
     */
    public TesImgPixel() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manos2 = new javax.swing.JLabel();
        Manos1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Manos1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/manos.png"))); // NOI18N

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 144, 30));
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(332, 332, 332)
                .addComponent(jButton1)
                .addContainerGap(350, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(manos2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(102, 102, 102))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addComponent(Manos1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(368, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(manos2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(Manos1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(144, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int[] hola = new int[3];
        hola[0] = 0;
        hola[1] = 0;
        hola[2] = 0;

        int[] hola1 = new int[3];
        hola1[0] = 0;
        hola1[1] = 144;
        hola1[2] = 38;
        imagenManos();
        toBufferedImage(bimg);
        //filtroC(2,40,30,90, hola,hola1);

        cargarDedoSiguiente(3);
    }//GEN-LAST:event_jButton1ActionPerformed

    public static BufferedImage toBufferedImage(Image img) {
        if (img instanceof BufferedImage) {
            return (BufferedImage) img;
        }
        BufferedImage bimage = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB);
        Graphics2D bGr = bimage.createGraphics();
        bGr.drawImage(img, 0, 0, null);
        bGr.dispose();
        return bimage;
    }

    private void imagenManos() {
        try {
            if (f == false) {
                bimg = ImageIO.read(new File("/home/wilmer/NetBeansProjects/IniciandoHuellav1.0/src/imagenes/manos.png"));
                ///home/wilmer/NetBeansProjects/IniciandoHuellav1.0/src/imagenes
            }
        } catch (IOException | ClassCastException ex) {
            System.out.println("Error ControlPanelManos: filtroC ." + ex);
        }
    }

    public void filtroC(int x1, int x2, int y1, int y2, int[] co1, int[] co2) {
        manos2.setIcon(new ImageIcon(bimg));
        System.out.println("llego");
        for (int i = x1; i < x2; i++) {
            for (int j = y1; j < y2; j++) {
                System.out.println("llego");
                //se obtiene el color del pixel
                color = new Color(bimg.getRGB(i, j));
                //se extraen los valores RGB
                r = color.getRed();
                gs = color.getGreen();
                b = color.getBlue();
                //se coloca en la nueva imagen con los valores invertidos
                System.out.println("r:" + r + ",col[0]:" + co1[0]);
                System.out.println("gs:" + gs + ",col[1]:" + co1[1]);
                System.out.println("b:" + b + ",col[2]:" + co1[2]);
                if (r == co1[0] && gs == co1[1] && b == co1[2]) {
                    //bimg.setRGB(i, j, new Color(0, 255, 0).getRGB());
                    bimg.setRGB(i, j, new Color(co2[0], co2[1], co2[2]).getRGB());
                }
            }
        }
        manos2.setIcon(new ImageIcon(bimg));
    }

    public void cargarDedo(int dedo) {
        if (dedo >= 0 && dedo <= 9) {
            int[] co1 = {0, 0, 0}; // negro
            int[] co2 = {40, 100, 40}; // verde
            switch (dedo) {
                case 0:
                    filtroC(20, 40, 32, 91, co1, co2);
                    break;
                case 1:
                    filtroC(41, 65, 14, 91, co1, co2);
                    break;
                case 2:
                    filtroC(65, 87, 2, 91, co1, co2);
                    break;
                case 3:
                    filtroC(89, 112, 21, 91, co1, co2);
                    break;
                case 4:
                    filtroC(110, 145, 98, 170, co1, co2);
                    break;
                case 5:
                    filtroC(164, 194, 98, 170, co1, co2);
                    break;
                case 6:
                    filtroC(197, 219, 21, 91, co1, co2);
                    break;
                case 7:
                    filtroC(220, 240, 2, 91, co1, co2);
                    break;
                case 8:
                    filtroC(241, 264, 14, 91, co1, co2);
                    break;
                case 9:
                    filtroC(265, 288, 32, 91, co1, co2);
                    break;
            }
        }
    }

    public void cargarDedoSiguiente(int dedo) {
        if (dedo >= 0 && dedo <= 9) {
            int[] co1 = {0, 0, 0}; // negro
            int[] co2 = {215, 205, 28}; // amarillo
            switch (dedo) {
                case 0:
                    filtroC(20, 40, 32, 91, co1, co2);
                    break;
                case 1:
                    filtroC(41, 64, 14, 91, co1, co2);
                    break;
                case 2:
                    filtroC(64, 84, 2, 91, co1, co2);
                    break;
                case 3:
                    filtroC(87, 112, 21, 91, co1, co2);
                    break;
                case 4:
                    filtroC(110, 145, 98, 170, co1, co2);
                    break;
                case 5:
                    filtroC(164, 194, 98, 170, co1, co2);
                    break;
                case 6:
                    filtroC(197, 219, 21, 91, co1, co2);
                    break;
                case 7:
                    filtroC(220, 240, 2, 91, co1, co2);
                    break;
                case 8:
                    filtroC(241, 264, 14, 91, co1, co2);
                    break;
                case 9:
                    filtroC(265, 288, 32, 91, co1, co2);
                    break;
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TesImgPixel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TesImgPixel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TesImgPixel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TesImgPixel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TesImgPixel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Manos1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel manos2;
    // End of variables declaration//GEN-END:variables
}
